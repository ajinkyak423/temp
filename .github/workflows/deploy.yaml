name: summon-platform-CI

on:
  push:
  workflow_dispatch:

jobs:
  Build-docker-image:
    name: docker_image
    runs-on: ubuntu-latest
    steps:
      - name: check for deploy
        if: contains(github.event.head_commit.message, 'deploy')
        run: |
          DEPLOY=$(echo "${{ github.event.head_commit.message }}" | sed -n 's/.*\[deploy:[[:space:]]*\([^]]*\)].*/\1/p')
          echo "DEPLOY=$DEPLOY" >> $GITHUB_ENV

      - name: checkout code
        uses: actions/checkout@v3

      - name: create PR to deploy latest build to tenant
        if: env.DEPLOY != null
        uses: actions/checkout@v3
        with:
          repository: ajinkyak423/actions-poc
          path: actions-poc
          token: ${{ secrets.MY_GITHUB_ACTION_TOKEN }}

      - name: directory  
        run: |
            echo "Current directory: $(pwd)"
            ls -ltra
  
    
      - name: update file in poc
        run: |
         time=$(date)
         echo "time=$time" >> actions-poc/yourfile.txt
         cat actions-poc/yourfile.txt

      - name: Add untracked files to branch
        run: |
           git status

      - name: Create PR and Notify via Github-actions
        if: env.DEPLOY != null    
        id: notify
        run: |
             git checkout -B ${{ env.DEPLOY }}
             git config user.email "418982+github-actions[bot]@users.noreply.github.com"
             git config user.name "github-actions[bot]"
             echo "Adding files"
             git add actions-poc/yourfile.txt
             git -c author.name=${{ github.actor }} -c author.email=${{ github.actor }}@users.noreply.github.com commit -m "Runner version update to ${{ env.new_tag_value }}"
 
             git push --force --set-upstream origin ${{ env.DEPLOY }}  # Force push to the new branch
 
             postData='{
               "ref": "main",
               "inputs": {
                 "REPOSITORY": "ajinkyak423/actions-poc",
                 "REF": "${{ env.DEPLOY }}",
                 "TITLE": "Runner version update to ${{ env.new_tag_value }}",
                 "BODY": "${{ env.DEPLOY }}"
                 "SLACK_CHANNEL": "actions-notif"
               }
             }'
 
             curl -X POST \
             -d "${postData}" \
             -H "Accept: application/vnd.github+json" \
             -H "Authorization: Bearer ${{ secrets.MY_GITHUB_ACTION_TOKEN }}" \
             -H "X-GitHub-Api-Version: 2022-11-28" \
             https://api.github.com/repos/ajinkyak423/actions-poc/actions/workflows/create-pr.yml/dispatches
       
      