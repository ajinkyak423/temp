name: summon-platform-CI

on:
  push:
  workflow_dispatch:

    
jobs:
  Build-docker-image:
    name: docker_image
    runs-on: ubuntu-latest
    steps:
      # - name: Setup Python
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: '3.8.15'

      # - name: check for deploy
      #   if: contains(github.event.head_commit.message, 'deploy')
      #   run: |
      #     DEPLOY=$(echo "${{ github.event.head_commit.message }}" | sed -n 's/.*\[deploy:[[:space:]]*\([^]]*\)].*/\1/p')
      #     echo "DEPLOY=$DEPLOY" >> $GITHUB_ENV

      - name: checkout code
        uses: actions/checkout@v4

      # - name: create PR to deploy latest build to tenant
      #   if: env.DEPLOY != null
      #   uses: actions/checkout@v4
      #   with:
      #     repository: ajinkyak423/actions-poc
      #     path: actions-poc
      #     token: ${{ secrets.MY_GITHUB_ACTION_TOKEN }}

      - name: directory
        run: |
            echo "Current directory: $(pwd)"
            ls -ltra
            # python temp.py
            # echo "deploy_tanent_file=${{ env.deploy_tanent_file }}"
            time=$(date)
            echo "time=$time" >> yourfile.txt
            echo "CURRENT_DATE=$(date +'%s')" >> $GITHUB_ENV
            cat yourfile.txt
    
      # - name: update file in poc
      #   if: env.DEPLOY != null    
      #   run: |
      #    postData='{
      #      "ref": "main",
      #      "inputs": {
      #        "TANENT_NAME": "${{ env.DEPLOY }}",
      #        "IMAGE_TAG_VALUE": "1704395230-fd7169ac-jk-car-25367-subscription-addon-mods"
      #      }
      #    }'

      #    curl -X POST \
      #    -d "${postData}" \
      #    -H "Accept: application/vnd.github+json" \
      #    -H "Authorization: Bearer ${{ secrets.MY_GITHUB_ACTION_TOKEN }}" \
      #    -H "X-GitHub-Api-Version: 2022-11-28" \
      #    https://api.github.com/repos/ajinkyak423/actions-poc/actions/workflows/create-pr.yml/dispatches



      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Summon version update for ${{ inputs.TENANTS_NAME }}
          committer: ridecell-github-action <devops+github-actions@ridecell.com>
          branch: ${{ env.CURRENT_DATE }}-auto-deploy
          delete-branch: true
          title: 'SummonPlatform version change for ${{ inputs.TENANTS_NAME }}'
          labels: "auto-deploy"
        
      - name: Wait for PR to be ready
        if: ${{ steps.cpr.outputs.pull-request-number != '' }}
        run: |
          status=""
          retry_count=6
          while [[ "$status" != "clean" && $retry_count -ne 0 ]]; do
            sleep 20
            status=$(curl -sS -H "Accept: application/vnd.github.v3+json" -u ridecell-github-action:${{ secrets.GITHUB_TOKEN }} https://api.github.com/repos/Ridecell/kubernetes-summon/pulls/${{ steps.cpr.outputs.pull-request-number }} | jq '.mergeable_state' | tr -d '"')
            echo $status
            ((retry_count--))
          done
    
      # it has auto-update for the branch. Default option is merge for auto-update branch.
      - name: automerge
        if: ${{ steps.cpr.outputs.pull-request-number != '' }}
        uses: "pascalgn/automerge-action@v0.16.2"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          MERGE_LABELS: "auto-deploy"
          MERGE_METHOD: "squash"
          MERGE_METHOD_LABELS: "autosquash=squash"
          MERGE_REQUIRED_APPROVALS: 1
          MERGE_RETRIES: 6
          MERGE_RETRY_SLEEP: 20000
          MERGE_METHOD_LABEL_REQUIRED: "true"
          PULL_REQUEST: "${{ steps.cpr.outputs.pull-request-number }}"